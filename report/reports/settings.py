"""
Django settings for reports project.

Generated by 'django-admin startproject' using Django 5.0.1.

For more information on this file, see
https://docs.djangoproject.com/en/5.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.0/ref/settings/
"""

from pathlib import Path
import os

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get('DJANGO_SECRET_KEY', 'django-insecure-a=tst$tz_@q)7e^m_@5(+4ye8b-5!&^fa*ug$$4=al1oy_&b9k')

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = ['127.0.0.1', 'localhost', ' 192.168.8.129']



# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',  # Ajout du framework de sites
    'django.contrib.humanize',  # Ajout pour les filtres de formatage (intcomma, etc.)
    'widget_tweaks',
    # Nouvelles applications
    'users.apps.UsersConfig',
    'orders.apps.OrdersConfig',
    'core.apps.CoreConfig',
    'rest_framework',
]

# Configuration du site
SITE_ID = 1

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'core.middleware.UtilisateurActuelMiddleware',  # Middleware pour capturer l'utilisateur actuel
]

ROOT_URLCONF = 'reports.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [BASE_DIR / 'templates', BASE_DIR / 'core' / 'templates'],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'reports.wsgi.application'


# Database
# https://docs.djangoproject.com/en/5.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.environ.get('DB_NAME', 'report_db'),
        'USER': os.environ.get('DB_USER', 'postgres'),
        'PASSWORD': os.environ.get('DB_PASSWORD', 'aime'),
        'HOST': os.environ.get('DB_HOST', 'localhost'),
        'PORT': os.environ.get('DB_PORT', '5432'),
    }
}


# Password validation
# https://docs.djangoproject.com/en/5.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/5.0/howto/static-files/

STATIC_URL = 'static/'
STATIC_ROOT = BASE_DIR / 'staticfiles'
STATICFILES_DIRS = [BASE_DIR / 'static']

# Media files
MEDIA_URL = '/media/'
MEDIA_ROOT = BASE_DIR / 'media'

# Default primary key field type
# https://docs.djangoproject.com/en/5.0/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = 'django.db.models.BigAutoField'

# Authentication settings
LOGIN_URL = '/connexion/'
LOGIN_REDIRECT_URL = 'core:accueil'
LOGOUT_REDIRECT_URL = '/connexion/'

# Modèle d'utilisateur personnalisé
AUTH_USER_MODEL = 'users.CustomUser'

# Configuration des emails
# Utilisation d'un backend multi-canaux pour envoyer les emails à la fois vers la console et les fichiers
from django.core.mail.backends.base import BaseEmailBackend
from django.core.mail.backends.console import EmailBackend as ConsoleEmailBackend
from django.core.mail.backends.filebased import EmailBackend as FileEmailBackend

class MultiEmailBackend(BaseEmailBackend):
    """Un backend qui envoie les emails à plusieurs autres backends"""
    def __init__(self, **kwargs):
        super().__init__(**kwargs)
        self.console_backend = ConsoleEmailBackend(**kwargs)
        self.file_backend = FileEmailBackend(file_path=BASE_DIR / 'sent_emails', **kwargs)

    def send_messages(self, email_messages):
        # Envoyer les emails à la console
        self.console_backend.send_messages(email_messages)
        # Enregistrer les emails dans des fichiers
        self.file_backend.send_messages(email_messages)
        return len(email_messages)

# Utiliser notre backend personnalisé
EMAIL_BACKEND = 'reports.settings.MultiEmailBackend'

# Créer le dossier sent_emails s'il n'existe pas
if not os.path.exists(BASE_DIR / 'sent_emails'):
    os.makedirs(BASE_DIR / 'sent_emails')

# Configuration pour un futur backend SMTP (actuellement désactivé)
# EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'
# EMAIL_HOST = 'smtp.gmail.com'
# EMAIL_PORT = 587
# EMAIL_USE_TLS = True
# EMAIL_HOST_USER = 'votre-email@gmail.com'
# EMAIL_HOST_PASSWORD = 'votre-mot-de-passe-ou-mot-de-passe-d-application'

# Adresse d'expédition par défaut
DEFAULT_FROM_EMAIL = 'noreply@example.com'

# Security settings for production
if not DEBUG:
    SESSION_COOKIE_SECURE = True
    CSRF_COOKIE_SECURE = True
    SECURE_SSL_REDIRECT = True


